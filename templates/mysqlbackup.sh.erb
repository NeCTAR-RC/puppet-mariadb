#!/bin/sh
#
# MySQL Backup Script
#  Dumps mysql databases to a file for another backup tool to pick up.
#
# MySQL code:
# GRANT SELECT, RELOAD, LOCK TABLES ON *.* TO 'user'@'localhost'
# IDENTIFIED BY 'password';
# FLUSH PRIVILEGES;
#
##### START CONFIG ###################################################

USER=<%= @backupuser %>
PASS=<%= @backuppassword %>
DIR=<%= @backupdir %>
DAYS=<%= @backupdays %>

##### STOP CONFIG ####################################################
CREDS="-u$USER -p$PASS"
MYSQLDUMP="mysqldump $CREDS --opt --flush-logs --single-transaction"
DATE=$(date +%Y%m%d-%H%M%S)
PATH=/usr/bin:/usr/sbin:/bin:/sbin

[ -d "$DIR" ] && find $DIR -type f -mtime +$DAYS -delete

<%- if @onefile -%>
TARGET="mysql_backup_$DATE"
FNAME="$DIR/$TARGET.sql<% if @backupcompress %>.<%= @compress_extension %><% end %>"
{ $MYSQLDUMP --all-databases <% if @backupcompress %>| <%= @compress_command %> <% end %>> $FNAME.inprogress; } 2> $DIR/$TARGET.log
mv $FNAME.inprogress $FNAME
<%- else -%>
for DB in $(mysql $CREDS -N -s -e "show databases;"); do
    TARGET="mysql_backup_$DATE-$DB"
    FNAME="$DIR/$TARGET.bin<% if @backupcompress %>.<%= @compress_extension %><% end %>"
    { $MYSQLDUMP --databases $DB <% if @backupcompress %>| <%= @compress_command %> <% end %>>$FNAME.inprogress; } 2> $DIR/$TARGET.log
    mv $FNAME.inprogress $FNAME
done
<%- end -%>
